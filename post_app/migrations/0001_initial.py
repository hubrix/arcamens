# Generated by Django 2.1.7 on 2019-05-08 03:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('group_app', '0001_initial'),
        ('card_app', '0002_auto_20190508_0346'),
        ('list_app', '0001_initial'),
        ('board_app', '0002_auto_20190508_0346'),
        ('core_app', '0002_auto_20190508_0346'),
    ]

    operations = [
        migrations.CreateModel(
            name='EArchivePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_archive_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EAttachPostFile',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EBindTagPost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_bind_tag_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ECopyPost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_copy_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ECreatePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ECreatePostFork',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('board', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_create_post_fork4', to='board_app.Board')),
                ('card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post_fork1', to='card_app.Card')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post_fork3', to='group_app.Group')),
                ('list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post_fork0', to='list_app.List')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ECutPost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_cut_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EDeletePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('post_label', models.CharField(max_length=626)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_delete_post', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EDettachPostFile',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('filename', models.CharField(max_length=626, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ELikePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('status', models.CharField(max_length=626, null=True)),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_like_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ERestorePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('event_html', models.TextField(blank=True, null=True)),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_restore_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ESetPostPriorityDown',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('ancestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_down0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='ESetPostPriorityUp',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('ancestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_up0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EUnarchivePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unarchive_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EUnbindTagPost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unbind_tag_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EUnlikePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('status', models.CharField(max_length=626, null=True)),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unlike_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='EUpdatePost',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_app.Event')),
                ('post_label', models.CharField(help_text='Label, Deadline, ...', max_length=626, null=True, verbose_name='Label')),
                ('post_html', models.TextField(blank=True, null=True)),
                ('post_data', models.TextField(blank=True, default='', help_text='Markdown content.', verbose_name='Data')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_update_post0', to='group_app.Group')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_app.event',),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('label', models.CharField(help_text='Short description,', max_length=626, null=True, verbose_name='Label')),
                ('done', models.BooleanField(blank=True, default=False)),
                ('html', models.TextField(blank=True, null=True)),
                ('data', models.TextField(blank=True, default='', help_text='Markdown content.', verbose_name='Data')),
                ('ancestor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='group_app.Group')),
                ('likes', models.ManyToManyField(related_name='post_likes', to='core_app.User')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core_app.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostFileWrapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='', verbose_name='')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.Organization')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post_app.Post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern', models.CharField(blank=True, default='', help_text='Example: tag:bug + tag:python', max_length=255)),
                ('status', models.BooleanField(blank=True, default=False, help_text='Filter On/Off.')),
                ('done', models.BooleanField(blank=True, default=False, help_text='Done posts.')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group_app.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.User')),
            ],
        ),
        migrations.CreateModel(
            name='PostPin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.Organization')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post_app.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.User')),
            ],
        ),
        migrations.CreateModel(
            name='PostSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern', models.CharField(blank=True, default='', help_text='Example: worker:oliveira + group:backlog + tag:git', max_length=255)),
                ('status', models.BooleanField(blank=True, default=False, help_text='Filter On/Off.')),
                ('done', models.BooleanField(blank=True, default=False)),
                ('created_by_me', models.BooleanField(blank=True, default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.User')),
            ],
        ),
        migrations.CreateModel(
            name='PostTagship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='post_app.Post')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_tagship', to='core_app.Tag')),
                ('tagger', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_taggership', to='core_app.User')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', through='post_app.PostTagship', to='core_app.Tag'),
        ),
        migrations.AddField(
            model_name='eupdatepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='eunlikepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unlike_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='eunbindtagpost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unbind_tag_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='eunbindtagpost',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unbind_tag_post2', to='core_app.Tag'),
        ),
        migrations.AddField(
            model_name='eunarchivepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_unarchive_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='esetpostpriorityup',
            name='post0',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_up1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='esetpostpriorityup',
            name='post1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_up2', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='esetpostprioritydown',
            name='post0',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_down1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='esetpostprioritydown',
            name='post1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_set_post_priority_down2', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='erestorepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_restore_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='elikepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_like_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='edettachpostfile',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_dettach_post_file1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ecutpost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_cut_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ecreatepostfork',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post_fork2', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ecreatepost',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_create_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ecopypost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_copy_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ebindtagpost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_bind_tag_post1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='ebindtagpost',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_bind_tag_post2', to='core_app.Tag'),
        ),
        migrations.AddField(
            model_name='eattachpostfile',
            name='filewrapper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_attach_post_file0', to='post_app.PostFileWrapper'),
        ),
        migrations.AddField(
            model_name='eattachpostfile',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_attach_post_file1', to='post_app.Post'),
        ),
        migrations.AddField(
            model_name='earchivepost',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_archive_post1', to='post_app.Post'),
        ),
        migrations.AlterUniqueTogether(
            name='posttagship',
            unique_together={('post', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='postsearch',
            unique_together={('user', 'organization')},
        ),
        migrations.AlterUniqueTogether(
            name='postpin',
            unique_together={('user', 'organization', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='postfilter',
            unique_together={('user', 'group')},
        ),
    ]
