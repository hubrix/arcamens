#!/usr/bin/env python

import os
import django
# import pika

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "arcamens.settings")
django.setup()

from group_app.models import Group, GroupFilter
from core_app.models import Organization, User
from card_app.models import Card
from board_app.models import Board
from list_app.models import List
import sys

COUNT    = int(sys.argv[2])
TOKEN    = sys.argv[1]
N_ORGS   = COUNT
N_BOARDS = COUNT
N_CARDS  = COUNT
N_LISTS  = COUNT
N_USERS  = COUNT
N_ORGS   = COUNT

def create_cards(organization, user, list):
    label = 'Card %s %s %s' % (
    organization.name, list.name, user.name)

    for ind in range(50):
        card = Card.objects.create(owner=user, 
            label=label, ancestor=list)
        card.workers.add(user)

def create_lists(organization, user, board):
    for ind in range(0, N_LISTS):
        list = List.objects.create(owner=user, name='%s List:%s' % (
            organization.name, user.name), ancestor=board)
        create_cards(organization, user, list)

def create_boards(organization, user):
    for ind in range(0, N_BOARDS):
        board = Board.objects.create(organization=organization, 
            owner=user, name='%s Board:%s' % (
                organization.name, ind))
        board.members.add(user)
        create_lists(organization, user, board)

def create_users(organization):
    for ind in range(0, N_USERS):
        user = User.objects.create(
            name='%s User:%s' % (organization.name, ind), 
                email='Org:%sUser:%s@arca.com' % (organization.name, ind), 
                    password='111', default=organization)
        create_boards(organization, user)

def create_organizations():
    for ind in range(0, N_ORGS):
        organization = Organization.objects.create(
            name='%s:%s' % (TOKEN, ind))
        create_users(organization)

    
create_organizations()

